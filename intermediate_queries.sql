-- 1. Calculate the number of orders per month in 2018.
SELECT monthname(order_approved_at) AS month,
       COUNT(order_id) AS order_count

FROM orders
WHERE year(order_approved_at) = 2018
GROUP BY month
order by order_count DESC;

-- ----------------------------------------------------
-- 2. Find the average number of products per order, grouped by customer city.
with count_per_order as (select orders.order_id , orders.customer_id , count(order_items.order_id) as oc 
from orders join order_items 
on orders.order_id = order_items.order_id
group by orders.order_id , orders.customer_id)

select customers.customer_city , round(avg(count_per_order.oc),2) as average_orders
from customers join count_per_order 
on customers.customer_id = count_per_order.customer_id
group by customers.customer_city;
-- -------------------------------------------------------
-- 3. Calculate the percentage of total revenue contributed by each product category.

select products.product_category category , round(sum(payments.payment_value)/(select sum(payment_value) from payments) * 100,4) sales_percentage
from products 
join order_items 
on products.product_id = order_items.product_id
join payments 
on order_items.order_id = payments.order_id
group by category
order by sales_percentage desc;
-- -------------------------------------------------------
-- 4. Calculate the total revenue generated by each seller, and rank them by revenue.
select * , dense_rank() over (order by revenue desc) as rn from 
(select  sellers.seller_id , round(sum(payments.payment_value),2) as revenue 
from payments join order_items 
on order_items.order_id = payments.order_id
join sellers 
on order_items.seller_id = sellers.seller_id
group by seller_id
order by revenue desc) as a;







